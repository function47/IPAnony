// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pan_pan,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.164629,HLS_SYN_LAT=507,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=593,HLS_SYN_LUT=2861,HLS_VERSION=2023_2}" *)

module pan (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_state1 = 68'd1;
parameter    ap_ST_fsm_state2 = 68'd2;
parameter    ap_ST_fsm_state3 = 68'd4;
parameter    ap_ST_fsm_state4 = 68'd8;
parameter    ap_ST_fsm_state5 = 68'd16;
parameter    ap_ST_fsm_state6 = 68'd32;
parameter    ap_ST_fsm_state7 = 68'd64;
parameter    ap_ST_fsm_state8 = 68'd128;
parameter    ap_ST_fsm_state9 = 68'd256;
parameter    ap_ST_fsm_state10 = 68'd512;
parameter    ap_ST_fsm_state11 = 68'd1024;
parameter    ap_ST_fsm_state12 = 68'd2048;
parameter    ap_ST_fsm_state13 = 68'd4096;
parameter    ap_ST_fsm_state14 = 68'd8192;
parameter    ap_ST_fsm_state15 = 68'd16384;
parameter    ap_ST_fsm_state16 = 68'd32768;
parameter    ap_ST_fsm_state17 = 68'd65536;
parameter    ap_ST_fsm_state18 = 68'd131072;
parameter    ap_ST_fsm_state19 = 68'd262144;
parameter    ap_ST_fsm_state20 = 68'd524288;
parameter    ap_ST_fsm_state21 = 68'd1048576;
parameter    ap_ST_fsm_state22 = 68'd2097152;
parameter    ap_ST_fsm_state23 = 68'd4194304;
parameter    ap_ST_fsm_state24 = 68'd8388608;
parameter    ap_ST_fsm_state25 = 68'd16777216;
parameter    ap_ST_fsm_state26 = 68'd33554432;
parameter    ap_ST_fsm_state27 = 68'd67108864;
parameter    ap_ST_fsm_state28 = 68'd134217728;
parameter    ap_ST_fsm_state29 = 68'd268435456;
parameter    ap_ST_fsm_state30 = 68'd536870912;
parameter    ap_ST_fsm_state31 = 68'd1073741824;
parameter    ap_ST_fsm_state32 = 68'd2147483648;
parameter    ap_ST_fsm_state33 = 68'd4294967296;
parameter    ap_ST_fsm_state34 = 68'd8589934592;
parameter    ap_ST_fsm_state35 = 68'd17179869184;
parameter    ap_ST_fsm_state36 = 68'd34359738368;
parameter    ap_ST_fsm_state37 = 68'd68719476736;
parameter    ap_ST_fsm_state38 = 68'd137438953472;
parameter    ap_ST_fsm_state39 = 68'd274877906944;
parameter    ap_ST_fsm_state40 = 68'd549755813888;
parameter    ap_ST_fsm_state41 = 68'd1099511627776;
parameter    ap_ST_fsm_state42 = 68'd2199023255552;
parameter    ap_ST_fsm_state43 = 68'd4398046511104;
parameter    ap_ST_fsm_state44 = 68'd8796093022208;
parameter    ap_ST_fsm_state45 = 68'd17592186044416;
parameter    ap_ST_fsm_state46 = 68'd35184372088832;
parameter    ap_ST_fsm_state47 = 68'd70368744177664;
parameter    ap_ST_fsm_state48 = 68'd140737488355328;
parameter    ap_ST_fsm_state49 = 68'd281474976710656;
parameter    ap_ST_fsm_state50 = 68'd562949953421312;
parameter    ap_ST_fsm_state51 = 68'd1125899906842624;
parameter    ap_ST_fsm_state52 = 68'd2251799813685248;
parameter    ap_ST_fsm_state53 = 68'd4503599627370496;
parameter    ap_ST_fsm_state54 = 68'd9007199254740992;
parameter    ap_ST_fsm_state55 = 68'd18014398509481984;
parameter    ap_ST_fsm_state56 = 68'd36028797018963968;
parameter    ap_ST_fsm_state57 = 68'd72057594037927936;
parameter    ap_ST_fsm_state58 = 68'd144115188075855872;
parameter    ap_ST_fsm_state59 = 68'd288230376151711744;
parameter    ap_ST_fsm_state60 = 68'd576460752303423488;
parameter    ap_ST_fsm_state61 = 68'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 68'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 68'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 68'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 68'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 68'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 68'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 68'd147573952589676412928;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [67:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] ip;
wire   [31:0] ipEnc;
reg    ipEnc_ap_vld;
wire   [127:0] grp_getLeadingBits_fu_531_ap_return;
reg   [127:0] reg_583;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state64;
reg   [31:0] ip_read_reg_884;
reg   [0:0] tmp_reg_896;
wire    ap_CS_fsm_state3;
reg   [4:0] flipArray_address0;
reg    flipArray_ce0;
reg    flipArray_we0;
reg   [0:0] flipArray_d0;
wire   [0:0] flipArray_q0;
wire    grp_pan_Pipeline_1_fu_526_ap_start;
wire    grp_pan_Pipeline_1_fu_526_ap_done;
wire    grp_pan_Pipeline_1_fu_526_ap_idle;
wire    grp_pan_Pipeline_1_fu_526_ap_ready;
wire   [4:0] grp_pan_Pipeline_1_fu_526_flipArray_address0;
wire    grp_pan_Pipeline_1_fu_526_flipArray_ce0;
wire    grp_pan_Pipeline_1_fu_526_flipArray_we0;
wire   [0:0] grp_pan_Pipeline_1_fu_526_flipArray_d0;
wire    grp_getLeadingBits_fu_531_ap_ready;
reg   [4:0] grp_getLeadingBits_fu_531_i;
wire    grp_process_r_fu_569_ap_start;
wire    grp_process_r_fu_569_ap_done;
wire    grp_process_r_fu_569_ap_idle;
wire    grp_process_r_fu_569_ap_ready;
wire   [127:0] grp_process_r_fu_569_ap_return;
wire    grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_start;
wire    grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_done;
wire    grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_idle;
wire    grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_ready;
wire   [4:0] grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_flipArray_address0;
wire    grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_flipArray_ce0;
wire   [31:0] grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ipEncInt_out;
wire    grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ipEncInt_out_ap_vld;
reg    grp_pan_Pipeline_1_fu_526_ap_start_reg;
reg    grp_process_r_fu_569_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state65;
reg    grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_start_reg;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
reg   [67:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_block_state3_on_subcall_done;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
reg    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
reg    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
reg    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
reg    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
reg    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
reg    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
reg    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
reg    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
reg    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
reg    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
reg    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
reg    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
reg    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
reg    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
reg    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
reg    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
reg    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
reg    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 68'd1;
#0 grp_pan_Pipeline_1_fu_526_ap_start_reg = 1'b0;
#0 grp_process_r_fu_569_ap_start_reg = 1'b0;
#0 grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_start_reg = 1'b0;
end

pan_flipArray_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
flipArray_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(flipArray_address0),
    .ce0(flipArray_ce0),
    .we0(flipArray_we0),
    .d0(flipArray_d0),
    .q0(flipArray_q0)
);

pan_pan_Pipeline_1 grp_pan_Pipeline_1_fu_526(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_pan_Pipeline_1_fu_526_ap_start),
    .ap_done(grp_pan_Pipeline_1_fu_526_ap_done),
    .ap_idle(grp_pan_Pipeline_1_fu_526_ap_idle),
    .ap_ready(grp_pan_Pipeline_1_fu_526_ap_ready),
    .flipArray_address0(grp_pan_Pipeline_1_fu_526_flipArray_address0),
    .flipArray_ce0(grp_pan_Pipeline_1_fu_526_flipArray_ce0),
    .flipArray_we0(grp_pan_Pipeline_1_fu_526_flipArray_we0),
    .flipArray_d0(grp_pan_Pipeline_1_fu_526_flipArray_d0)
);

pan_getLeadingBits grp_getLeadingBits_fu_531(
    .ap_ready(grp_getLeadingBits_fu_531_ap_ready),
    .ip32Bit(ip_read_reg_884),
    .i(grp_getLeadingBits_fu_531_i),
    .ap_return(grp_getLeadingBits_fu_531_ap_return)
);

pan_process_r grp_process_r_fu_569(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_process_r_fu_569_ap_start),
    .ap_done(grp_process_r_fu_569_ap_done),
    .ap_idle(grp_process_r_fu_569_ap_idle),
    .ap_ready(grp_process_r_fu_569_ap_ready),
    .plaintext_val(reg_583),
    .ap_return(grp_process_r_fu_569_ap_return)
);

pan_pan_Pipeline_VITIS_LOOP_39_2 grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_start),
    .ap_done(grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_done),
    .ap_idle(grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_idle),
    .ap_ready(grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_ready),
    .flipArray_address0(grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_flipArray_address0),
    .flipArray_ce0(grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_flipArray_ce0),
    .flipArray_q0(flipArray_q0),
    .ipEncInt_out(grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ipEncInt_out),
    .ipEncInt_out_ap_vld(grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ipEncInt_out_ap_vld)
);

pan_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ip(ip),
    .ipEnc(ipEnc),
    .ipEnc_ap_vld(ipEnc_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_pan_Pipeline_1_fu_526_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_pan_Pipeline_1_fu_526_ap_start_reg <= 1'b1;
        end else if ((grp_pan_Pipeline_1_fu_526_ap_ready == 1'b1)) begin
            grp_pan_Pipeline_1_fu_526_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state66)) begin
            grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_start_reg <= 1'b1;
        end else if ((grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_ready == 1'b1)) begin
            grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_process_r_fu_569_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
            grp_process_r_fu_569_ap_start_reg <= 1'b1;
        end else if ((grp_process_r_fu_569_ap_ready == 1'b1)) begin
            grp_process_r_fu_569_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        ip_read_reg_884 <= ip;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_583 <= grp_getLeadingBits_fu_531_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_reg_896 <= grp_process_r_fu_569_ap_return[32'd127];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state24_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

assign ap_ST_fsm_state26_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

assign ap_ST_fsm_state28_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state29_blk = 1'b1;
    end else begin
        ap_ST_fsm_state29_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state31_blk = 1'b1;
    end else begin
        ap_ST_fsm_state31_blk = 1'b0;
    end
end

assign ap_ST_fsm_state32_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state33_blk = 1'b1;
    end else begin
        ap_ST_fsm_state33_blk = 1'b0;
    end
end

assign ap_ST_fsm_state34_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state35_blk = 1'b1;
    end else begin
        ap_ST_fsm_state35_blk = 1'b0;
    end
end

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state41_blk = 1'b1;
    end else begin
        ap_ST_fsm_state41_blk = 1'b0;
    end
end

assign ap_ST_fsm_state42_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state43_blk = 1'b1;
    end else begin
        ap_ST_fsm_state43_blk = 1'b0;
    end
end

assign ap_ST_fsm_state44_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state45_blk = 1'b1;
    end else begin
        ap_ST_fsm_state45_blk = 1'b0;
    end
end

assign ap_ST_fsm_state46_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state47_blk = 1'b1;
    end else begin
        ap_ST_fsm_state47_blk = 1'b0;
    end
end

assign ap_ST_fsm_state48_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state49_blk = 1'b1;
    end else begin
        ap_ST_fsm_state49_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state51_blk = 1'b1;
    end else begin
        ap_ST_fsm_state51_blk = 1'b0;
    end
end

assign ap_ST_fsm_state52_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state53_blk = 1'b1;
    end else begin
        ap_ST_fsm_state53_blk = 1'b0;
    end
end

assign ap_ST_fsm_state54_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state55_blk = 1'b1;
    end else begin
        ap_ST_fsm_state55_blk = 1'b0;
    end
end

assign ap_ST_fsm_state56_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state57_blk = 1'b1;
    end else begin
        ap_ST_fsm_state57_blk = 1'b0;
    end
end

assign ap_ST_fsm_state58_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state59_blk = 1'b1;
    end else begin
        ap_ST_fsm_state59_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state60_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state61_blk = 1'b1;
    end else begin
        ap_ST_fsm_state61_blk = 1'b0;
    end
end

assign ap_ST_fsm_state62_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state63_blk = 1'b1;
    end else begin
        ap_ST_fsm_state63_blk = 1'b0;
    end
end

assign ap_ST_fsm_state64_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state65_blk = 1'b1;
    end else begin
        ap_ST_fsm_state65_blk = 1'b0;
    end
end

assign ap_ST_fsm_state66_blk = 1'b0;

always @ (*) begin
    if ((grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_done == 1'b0)) begin
        ap_ST_fsm_state67_blk = 1'b1;
    end else begin
        ap_ST_fsm_state67_blk = 1'b0;
    end
end

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_process_r_fu_569_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        flipArray_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        flipArray_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        flipArray_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        flipArray_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        flipArray_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        flipArray_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        flipArray_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        flipArray_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        flipArray_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        flipArray_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        flipArray_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        flipArray_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        flipArray_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        flipArray_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        flipArray_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        flipArray_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        flipArray_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        flipArray_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        flipArray_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        flipArray_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        flipArray_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        flipArray_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        flipArray_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        flipArray_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        flipArray_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        flipArray_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        flipArray_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        flipArray_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        flipArray_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        flipArray_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        flipArray_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        flipArray_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        flipArray_address0 = grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_flipArray_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        flipArray_address0 = grp_pan_Pipeline_1_fu_526_flipArray_address0;
    end else begin
        flipArray_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state57)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state45)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 
    == ap_CS_fsm_state39)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == 
    ap_CS_fsm_state11)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        flipArray_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        flipArray_ce0 = grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_flipArray_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        flipArray_ce0 = grp_pan_Pipeline_1_fu_526_flipArray_ce0;
    end else begin
        flipArray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd96];
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd97];
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd98];
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd99];
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd100];
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd101];
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd102];
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd103];
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd104];
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd105];
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd106];
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd107];
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd108];
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd109];
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd110];
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd111];
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd112];
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd113];
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd114];
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd115];
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd116];
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd117];
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd118];
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd119];
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd120];
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd121];
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd122];
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd123];
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd124];
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd125];
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        flipArray_d0 = grp_process_r_fu_569_ap_return[32'd126];
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        flipArray_d0 = tmp_reg_896;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        flipArray_d0 = grp_pan_Pipeline_1_fu_526_flipArray_d0;
    end else begin
        flipArray_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state57)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state45)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 
    == ap_CS_fsm_state39)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == 
    ap_CS_fsm_state11)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        flipArray_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        flipArray_we0 = grp_pan_Pipeline_1_fu_526_flipArray_we0;
    end else begin
        flipArray_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_getLeadingBits_fu_531_i = 5'd31;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_getLeadingBits_fu_531_i = 5'd30;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_getLeadingBits_fu_531_i = 5'd29;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_getLeadingBits_fu_531_i = 5'd28;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_getLeadingBits_fu_531_i = 5'd27;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_getLeadingBits_fu_531_i = 5'd26;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_getLeadingBits_fu_531_i = 5'd25;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_getLeadingBits_fu_531_i = 5'd24;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_getLeadingBits_fu_531_i = 5'd23;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_getLeadingBits_fu_531_i = 5'd22;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_getLeadingBits_fu_531_i = 5'd21;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_getLeadingBits_fu_531_i = 5'd20;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_getLeadingBits_fu_531_i = 5'd19;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_getLeadingBits_fu_531_i = 5'd18;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_getLeadingBits_fu_531_i = 5'd17;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_getLeadingBits_fu_531_i = 5'd16;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_getLeadingBits_fu_531_i = 5'd15;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_getLeadingBits_fu_531_i = 5'd14;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_getLeadingBits_fu_531_i = 5'd13;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_getLeadingBits_fu_531_i = 5'd12;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_getLeadingBits_fu_531_i = 5'd11;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_getLeadingBits_fu_531_i = 5'd10;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_getLeadingBits_fu_531_i = 5'd9;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_getLeadingBits_fu_531_i = 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_getLeadingBits_fu_531_i = 5'd7;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_getLeadingBits_fu_531_i = 5'd6;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_getLeadingBits_fu_531_i = 5'd5;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_getLeadingBits_fu_531_i = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_getLeadingBits_fu_531_i = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_getLeadingBits_fu_531_i = 5'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_getLeadingBits_fu_531_i = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_getLeadingBits_fu_531_i = 5'd0;
    end else begin
        grp_getLeadingBits_fu_531_i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ipEnc_ap_vld = 1'b1;
    end else begin
        ipEnc_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            if (((grp_process_r_fu_569_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if (((grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state67))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_process_r_fu_569_ap_done == 1'b0) | (grp_pan_Pipeline_1_fu_526_ap_done == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_pan_Pipeline_1_fu_526_ap_start = grp_pan_Pipeline_1_fu_526_ap_start_reg;

assign grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_start = grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ap_start_reg;

assign grp_process_r_fu_569_ap_start = grp_process_r_fu_569_ap_start_reg;

assign ipEnc = (ip_read_reg_884 ^ grp_pan_Pipeline_VITIS_LOOP_39_2_fu_577_ipEncInt_out);

endmodule //pan
